// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.API.Data;

namespace SmartSchool.API.Migrations
{
    [DbContext(typeof(SmartContext))]
    partial class SmartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SmartSchool.API.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 671, DateTimeKind.Local).AddTicks(8709),
                            Name = "Tecnologia da Informação",
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 671, DateTimeKind.Local).AddTicks(8627)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 671, DateTimeKind.Local).AddTicks(9437),
                            Name = "Sistemas de Informação",
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 671, DateTimeKind.Local).AddTicks(9429)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 671, DateTimeKind.Local).AddTicks(9453),
                            Name = "Ciência da Computação",
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 671, DateTimeKind.Local).AddTicks(9451)
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("BirthdayDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Registration")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            BirthdayDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(2290),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(2267),
                            LastName = "Kent",
                            Name = "Marta",
                            Phone = "33225555",
                            Registration = 1,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(2288)
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            BirthdayDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4546),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4540),
                            LastName = "Isabela",
                            Name = "Paula",
                            Phone = "3354288",
                            Registration = 2,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4544)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            BirthdayDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4616),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4614),
                            LastName = "Antonia",
                            Name = "Laura",
                            Phone = "55668899",
                            Registration = 3,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4615)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            BirthdayDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4626),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4623),
                            LastName = "Maria",
                            Name = "Luiza",
                            Phone = "6565659",
                            Registration = 4,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4625)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            BirthdayDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4634),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4631),
                            LastName = "Machado",
                            Name = "Lucas",
                            Phone = "565685415",
                            Registration = 5,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4633)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            BirthdayDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4645),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4643),
                            LastName = "Alvares",
                            Name = "Pedro",
                            Phone = "456454545",
                            Registration = 6,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4644)
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            BirthdayDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4653),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4651),
                            LastName = "José",
                            Name = "Paulo",
                            Phone = "9874512",
                            Registration = 7,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(4652)
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentsCourses");
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentsSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            SubjectId = 2,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(6456)
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 4,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7181)
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 5,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7221)
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 1,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7223)
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 2,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7225)
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 5,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7230)
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 1,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7232)
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 2,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7233)
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 3,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7235)
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 1,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7238)
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 4,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 5,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7242)
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 4,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7243)
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 5,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7245)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 1,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7247)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 2,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7248)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 3,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7250)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 4,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7254)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 1,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7256)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 2,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7258)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 3,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7259)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 4,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7261)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 5,
                            Grade = 0,
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 674, DateTimeKind.Local).AddTicks(7263)
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PrerequisiteId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Workload")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PrerequisiteId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(2054),
                            Name = "Matemática",
                            TeacherId = 1,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(2040),
                            Workload = 0
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3557),
                            Name = "Matemática",
                            TeacherId = 1,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3547),
                            Workload = 0
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3601),
                            Name = "Física",
                            TeacherId = 2,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3600),
                            Workload = 0
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3605),
                            Name = "Português",
                            TeacherId = 3,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3603),
                            Workload = 0
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 1,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3608),
                            Name = "Inglês",
                            TeacherId = 4,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3606),
                            Workload = 0
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3619),
                            Name = "Inglês",
                            TeacherId = 4,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3617),
                            Workload = 0
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3622),
                            Name = "Inglês",
                            TeacherId = 4,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3621),
                            Workload = 0
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 1,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3625),
                            Name = "Programação",
                            TeacherId = 5,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3623),
                            Workload = 0
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 2,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3628),
                            Name = "Programação",
                            TeacherId = 5,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3626),
                            Workload = 0
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 3,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3632),
                            Name = "Programação",
                            TeacherId = 5,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 672, DateTimeKind.Local).AddTicks(3631),
                            Workload = 0
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Registration")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(1392),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 669, DateTimeKind.Local).AddTicks(4398),
                            LastName = "Oliveira",
                            Name = "Lauro",
                            Registration = 1,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(1371)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2903),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2887),
                            LastName = "Soares",
                            Name = "Roberto",
                            Registration = 2,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2902)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2938),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2936),
                            LastName = "Marconi",
                            Name = "Ronaldo",
                            Registration = 3,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2937)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2943),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2941),
                            LastName = "Carvalho",
                            Name = "Rodrigo",
                            Registration = 4,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2942)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2948),
                            InitialDate = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2945),
                            LastName = "Montanha",
                            Name = "Alexandre",
                            Registration = 5,
                            UpdatedAt = new DateTime(2021, 8, 22, 20, 53, 18, 670, DateTimeKind.Local).AddTicks(2947)
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentCourse", b =>
                {
                    b.HasOne("SmartSchool.API.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentSubject", b =>
                {
                    b.HasOne("SmartSchool.API.Models.Student", "Student")
                        .WithMany("StudentsSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.Subject", "Subject")
                        .WithMany("StudentsSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.API.Models.Subject", b =>
                {
                    b.HasOne("SmartSchool.API.Models.Course", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.Subject", "Prerequisite")
                        .WithMany()
                        .HasForeignKey("PrerequisiteId");

                    b.HasOne("SmartSchool.API.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
